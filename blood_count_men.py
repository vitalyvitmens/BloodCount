# from tkinter import *
# import random
# import time
#
# def Quit(ev):
#     global root
#     root.destroy()


# root = Tk()
# root.geometry('1000x667')
# root.title('Blood Count')
# root.resizable(height=False, width=False)
# root.iconphoto(True, PhotoImage(file=('iconka.png')))
# font = PhotoImage(file=('holst.png'))
#
# panelFrame = Frame(root, height=100, bg="white")
# textFrame = Frame(root, height=340, width=600)
#
# panelFrame.pack(side='bottom', fill='x')
# textFrame.pack(side='bottom', fill='both', expand=1)
#
# textbox = Text(textFrame, font='Arial 14', wrap='word')
# scrollbar = Scrollbar(textFrame)
#
#
# Label(root, font=200, text='ПРОГРАММА АНАЛИЗА КРОВИ: BLOOD COUNT 2.0').pack()
#
# quitBtn = Button(panelFrame, bg="red", fg="white", font=200, text='Выход')
#
# quitBtn.bind("<Button-1>", Quit)
#
#
# quitBtn.place(x=100, y=0, width=800, height=100)
#
# root.mainloop()


""" БЛОК АНАЛИЗОВ КРОВИ: ОАК """
print("\033[01;4m{}".format(" ВВЕДИТЕ ЗНАЧЕНИЯ ОБЩЕГО АНАЛИЗА КРОВИ: "))


def wbc(a):
    """
        Функция wbc принимает на вход один параметр,
        a - уровень лейкоцитов крови в единицах измерения:
        [10^9 клеток\л]
    """

    if 0 < a < 4:
        print("\033[33m{}".format('Лейкоциты понижены!'))
    elif 4 <= a <= 9.5:
        print("\033[32m{}".format('Лейкоциты в норме!'))
    elif 9.5 < a <= 30:
        print("\033[31m{}".format('Лейкоциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Лейкоцитов!'))


wbc(float(input("\033[0m{}".format('Лейкоциты (WBC)[10^9 клеток\л]: '))))


def rbc(a):
    """
        Функция rbc принимает на вход один параметр,
        a - уровень эритроцитов крови в единицах измерения:
        [10^9 клеток\л]
    """

    if 0 < a < 3.6:
        print("\033[33m{}".format('Эритроциты понижены!'))
    elif 3.6 <= a <= 5.1:
        print("\033[32m{}".format('Эритроциты в норме!'))
    elif 5.1 < a <= 30:
        print("\033[31m{}".format('Эритроциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Эритроцитов!'))


rbc(float(input("\033[0m{}".format('Эритроциты (RBC)[10^9 клеток\л]: '))))


def hgb(a):
    """
        Функция hgb принимает на вход один параметр,
        a - уровень гемоглобина крови в единицах измерения:
        [г/л]
    """

    if 30 < a < 130:
        print("\033[33m{}".format('Гемоглобин понижен!'))
    elif 130 <= a <= 160:
        print("\033[32m{}".format('Гемоглобин в норме!'))
    elif 160 < a <= 300:
        print("\033[31m{}".format('Гемоглобин повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Гемоглобина!'))


hgb(float(input("\033[0m{}".format('Гемоглобин (HGB)[г/л]: '))))


def hct(a):
    """
        Функция hct принимает на вход один параметр,
        a - уровень гематокрита крови в единицах измерения:
        [%]
    """

    if 25 < a < 39:
        print("\033[33m{}".format('Гематокрит понижен!'))
    elif 39 <= a <= 49:
        print("\033[32m{}".format('Гематокрит в норме!'))
    elif 49 < a <= 80:
        print("\033[31m{}".format('Гематокрит повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Гематокрита!'))


hct(float(input("\033[0m{}".format('Гематокрит (HCT)[%]: '))))


def plt(a):
    """
        Функция plt принимает на вход один параметр,
        a - уровень тромбоцитов крови в единицах измерения:
        [10^9 клеток\л]
    """

    if 0 < a < 150:
        print("\033[33m{}".format('Тромбоциты понижены!'))
    elif 150 <= a <= 450:
        print("\033[32m{}".format('Тромбоциты в норме!'))
    elif 450 < a <= 1000:
        print("\033[31m{}".format('Тромбоциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Тромбоцитов!'))


plt(float(input("\033[0m{}".format('Тромбоциты (PLT)[10^9 клеток\л]: '))))


def neut(a):
    """
        Функция neut принимает на вход один параметр,
        a - уровень нейтрофильных гранулоцитов крови
        в единицах измерения: [%]
    """

    if 0 < a < 45:
        print("\033[33m{}".format('Нейтрофильные гранулоциты понижены!'))
    elif 45 <= a <= 70:
        print("\033[32m{}".format('Нейтрофильные гранулоциты в норме!'))
    elif 70 < a <= 100:
        print("\033[31m{}".format('Нейтрофильные гранулоциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Нейтрофильных гранулоцитов!'))


neut(float(input("\033[0m{}".format('Нейтрофильные гранулоциты (NEUT)[%]: '))))


def neut_p(a):
    """
        Функция neut_p принимает на вход один параметр,
        a - уровень палочкоядерных нейтрофилов крови
        в единицах измерения: [%]
    """

    if 0 < a < 1:
        print("\033[33m{}".format('Палочкоядерные нейтрофилы понижены!'))
    elif 1 <= a <= 5:
        print("\033[32m{}".format('Палочкоядерные нейтрофилы в норме!'))
    elif 5 < a <= 20:
        print("\033[31m{}".format('Палочкоядерные нейтрофилы повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Палочкоядерных нейтрофилов!'))


neut_p(float(input("\033[0m{}".format('Палочкоядерные нейтрофилы (NEUT P)[%]: '))))


def neut_s(a):
    """
        Функция neut_s принимает на вход один параметр,
        a - уровень сегментоядерных нейтрофилов крови
        в единицах измерения: [%]
    """

    if 0 < a < 1:
        print("\033[33m{}".format('Сегментоядерные нейтрофилы понижены!'))
    elif 1 <= a <= 5:
        print("\033[32m{}".format('Сегментоядерные нейтрофилы в норме!'))
    elif 5 < a <= 20:
        print("\033[31m{}".format('Сегментоядерные нейтрофилы повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Сегментоядерных нейтрофилов!'))


neut_s(float(input("\033[0m{}".format('Сегментоядерные нейтрофилы (NEUT S)[%]: '))))


def lymp(a):
    """
        Функция lymp принимает на вход один параметр,
        a - уровень лимфоцитов крови в единицах измерения: [%]
    """

    if 0 < a < 22:
        print("\033[33m{}".format('Лимфоциты понижены!'))
    elif 22 <= a <= 46:
        print("\033[32m{}".format('Лимфоциты в норме!'))
    elif 46 < a <= 100:
        print("\033[31m{}".format('Лимфоциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Лимфоцитов!'))


lymp(float(input("\033[0m{}".format('Лимфоциты (LYMP)[%]: '))))


def mono(a):
    """
        Функция mono принимает на вход один параметр,
        a - уровень моноцитов крови в единицах измерения: [%]
    """

    if 0 < a < 2:
        print("\033[33m{}".format('Моноциты понижены!'))
    elif 2 <= a <= 9:
        print("\033[32m{}".format('Моноциты в норме!'))
    elif 9 < a <= 30:
        print("\033[31m{}".format('Моноциты повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Моноцитов!'))


mono(float(input("\033[0m{}".format('Моноциты (MONO)[%]: '))))


def eos(a):
    """
        Функция eos принимает на вход один параметр,
        a - уровень эозинофилов крови в единицах измерения: [%]
    """

    if 0 < a < 1:
        print("\033[33m{}".format('Эозинофилы понижены!'))
    elif 1 <= a <= 5:
        print("\033[32m{}".format('Эозинофилы в норме!'))
    elif 5 < a <= 20:
        print("\033[31m{}".format('Эозинофилы повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Эозинофилов!'))


eos(float(input("\033[0m{}".format('Эозинофилы (EOS)[%]: '))))


def baso(a):
    """
        Функция baso принимает на вход один параметр,
        a - уровень базофилов крови в единицах измерения: [%]
    """

    if 0 < a < 0.01:
        print("\033[33m{}".format('Базофилы понижены!'))
    elif 0.01 <= a <= 1:
        print("\033[32m{}".format('Базофилы в норме!'))
    elif 1 < a <= 20:
        print("\033[31m{}".format('Базофилы повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Базофилов!'))


baso(float(input("\033[0m{}".format('Базофилы (BASO)[%]: '))))


def esr(a):
    """
        Функция esr принимает на вход один параметр,
        a - скорость оседания эритроцитов крови (СОЭ) в единицах измерения: [мм/час]
    """

    if 0 < a < 2:
        print("\033[33m{}".format('СОЭ понижена!'))
    elif 2 <= a <= 8:
        print("\033[32m{}".format('СОЭ в норме!'))
    elif 8 < a <= 30:
        print("\033[31m{}".format('СОЭ повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные СОЭ!'))


esr(float(input("\033[0m{}".format('СОЭ (ESR)[мм/час]: '))))

""" БЛОК АНАЛИЗОВ КРОВИ: БИОХИМИЯ """
print("\033[01;4m{}".format(" ВВЕДИТЕ ЗНАЧЕНИЯ БИОХИМИЧЕСКОГО ИССЛЕДОВАНИЯ: "))


def glucose(a):
    """
        Функция glucose принимает на вход один параметр,
        a - уровень глюкозы крови в единицах измерения: [mmol/L]
    """

    if 1.7 < a < 3.9:
        print("\033[33m{}".format('Глюкоза низкая!'))
    elif 3.9 <= a <= 5.6:
        print("\033[32m{}".format('Глюкоза в норме!'))
    elif 5.6 < a <= 30:
        print("\033[31m{}".format('Глюкоза повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Глюкозы!'))


glucose(float(input("\033[0m{}".format('Глюкоза (Glucose)[mmol/L]: '))))


def cholesterol(a):
    """
        Функция cholesterol принимает на вход один параметр,
        a - уровень холестерина крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 3.2:
        print("\033[33m{}".format('Холестерин понижен!'))
    elif 3.2 <= a <= 5.2:
        print("\033[32m{}".format('Холестерин в норме!'))
    elif 5.2 < a <= 10:
        print("\033[31m{}".format('Холестерин повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Холестерина!'))


cholesterol(float(input("\033[0m{}".format('Холестерин (Cholesterol)[mmol/L]: '))))


def hdl(a):
    """
        Функция hdl принимает на вход один параметр,
        a - уровень ЛПВП крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 1.03:
        print("\033[33m{}".format('ЛПВП понижены!'))
    elif 1.03 <= a <= 2.1:
        print("\033[32m{}".format('ЛПВП в норме!'))
    elif 2.1 < a <= 6:
        print("\033[31m{}".format('ЛПВП повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ЛПВП!'))


hdl(float(input("\033[0m{}".format('ЛПВП (HDL-cholesterol)[mmol/L]: '))))


def ldl(a):
    """
        Функция ldl принимает на вход один параметр,
        a - уровень ЛПНП крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 1:
        print("\033[33m{}".format('ЛПНП понижены!'))
    elif 1 <= a <= 4.12:
        print("\033[32m{}".format('ЛПНП в норме!'))
    elif 4.12 < a <= 10:
        print("\033[31m{}".format('ЛПНП повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ЛПНП!'))


ldl(float(input("\033[0m{}".format('ЛПНП (LDL-cholesterol)[mmol/L]: '))))


def triglyceride(a):
    """
        Функция triglyceride принимает на вход один параметр,
        a - уровень триглицеридов крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 0.25:
        print("\033[33m{}".format('Триглицериды понижены!'))
    elif 0.25 <= a <= 1.7:
        print("\033[32m{}".format('Триглицериды в норме!'))
    elif 1.7 < a <= 10:
        print("\033[31m{}".format('Триглицериды повышены!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Триглицеридов!'))


triglyceride(float(input("\033[0m{}".format('Триглицериды (Triglyceride)[mmol/L]: '))))


def gpt(a):
    """
        Функция gpt принимает на вход один параметр,
        a - уровень АЛТ крови в единицах измерения: [U/L]
    """

    if 0 < a < 5:
        print("\033[33m{}".format('АЛТ понижена!'))
    elif 5 <= a <= 45:
        print("\033[32m{}".format('АЛТ в норме!'))
    elif 45 < a <= 500:
        print("\033[31m{}".format('АЛТ повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня АЛТ!'))


gpt(float(input("\033[0m{}".format('АЛТ (GPT)[U/L]: '))))


def got(a):
    """
        Функция got принимает на вход один параметр,
        a - уровень АСТ крови в единицах измерения: [U/L]
    """

    if 0 < a < 5:
        print("\033[33m{}".format('АСТ понижена!'))
    elif 5 <= a <= 35:
        print("\033[32m{}".format('АСТ в норме!'))
    elif 35 < a <= 500:
        print("\033[31m{}".format('АСТ повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня АСТ!'))


got(float(input("\033[0m{}".format('АСТ (GOT)[U/L]: '))))


def ggt(a):
    """
        Функция ggt принимает на вход один параметр,
        a - уровень ГГТ крови в единицах измерения: [U/L]
    """

    if 0 < a < 10:
        print("\033[33m{}".format('ГГТ понижена!'))
    elif 10 <= a <= 55:
        print("\033[32m{}".format('ГГТ в норме!'))
    elif 55 < a <= 500:
        print("\033[31m{}".format('ГГТ повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ГГТ!'))


ggt(float(input("\033[0m{}".format('ГГТ (GGT)[U/L]: '))))


def total_bilirubin(a):
    """
        Функция total_bilirubin принимает на вход один параметр,
        a - уровень билирубина общего крови в единицах измерения: [μmol/L]
    """

    if 0 < a < 5:
        print("\033[33m{}".format('Билирубин общий понижен!'))
    elif 5 <= a <= 21:
        print("\033[32m{}".format('Билирубин общий в норме!'))
    elif 21 < a <= 300:
        print("\033[31m{}".format('Билирубин общий повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Билирубина общего!'))


total_bilirubin(float(input("\033[0m{}".format('Билирубин общий (Total bilirubin)[μmol/L]: '))))


def direct_bilirubin(a):
    """
        Функция direct_bilirubin принимает на вход один параметр,
        a - уровень билирубина прямого крови в единицах измерения: [μmol/L]
    """

    if 0 < a < 0.5:
        print("\033[33m{}".format('Билирубин прямой понижен!'))
    elif 0.5 <= a <= 5:
        print("\033[32m{}".format('Билирубин прямой в норме!'))
    elif 5 < a <= 300:
        print("\033[31m{}".format('Билирубин прямой повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Билирубина прямого!'))


direct_bilirubin(float(input("\033[0m{}".format('Билирубин прямой (Direct bilirubin)[μmol/L]: '))))


def creatinine(a):
    """
        Функция creatinine принимает на вход один параметр,
        a - уровень креатинина крови в единицах измерения: [μmol/L]
    """

    if 0 < a < 80:
        print("\033[33m{}".format('Креатинин понижен!'))
    elif 80 <= a <= 115:
        print("\033[32m{}".format('Креатинин в норме!'))
    elif 115 < a <= 500:
        print("\033[31m{}".format('Креатинин повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Креатинина!'))


creatinine(float(input("\033[0m{}".format('Креатинин (Creatinine)[μmol/L]: '))))


def urea(a):
    """
        Функция urea принимает на вход один параметр,
        a - уровень мочевины крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 2.8:
        print("\033[33m{}".format('Мочевина понижена!'))
    elif 2.8 <= a <= 7.2:
        print("\033[32m{}".format('Мочевина в норме!'))
    elif 7.2 < a <= 50:
        print("\033[31m{}".format('Мочевина повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Мочевины!'))


urea(float(input("\033[0m{}".format('Мочевина (Urea)[mmol/L]: '))))


def uric_acid(a):
    """
        Функция uric_acid принимает на вход один параметр,
        a - уровень мочевой кислоты крови в единицах измерения: [μmol/L]
    """

    if 0 < a < 208:
        print("\033[33m{}".format('Мочевая кислота понижена!'))
    elif 208 <= a <= 428:
        print("\033[32m{}".format('Мочевая кислота в норме!'))
    elif 428 < a <= 1000:
        print("\033[31m{}".format('Мочевая кислота повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Мочевой кислоты!'))


uric_acid(float(input("\033[0m{}".format('Мочевая кислота (Uric acid)[μmol/L]: '))))


def total_protein(a):
    """
        Функция total_protein принимает на вход один параметр,
        a - уровень общего белка крови в единицах измерения:
        [г/л]
    """

    if 0 < a < 66:
        print("\033[33m{}".format('Общий белок понижен!'))
    elif 66 <= a <= 87:
        print("\033[32m{}".format('Общий белок в норме!'))
    elif 87 < a <= 100:
        print("\033[31m{}".format('Общий белок повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Общего белка!'))


total_protein(float(input("\033[0m{}".format('Общий белок (Total Protein)[г/л]: '))))


def albumin(a):
    """
        Функция albumin принимает на вход один параметр,
        a - уровень альбумина крови в единицах измерения:
        [г/л]
    """

    if 0 < a < 35:
        print("\033[33m{}".format('Альбумин понижен!'))
    elif 35 <= a <= 52:
        print("\033[32m{}".format('Альбумин в норме!'))
    elif 52 < a <= 100:
        print("\033[31m{}".format('Альбумин повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Альбумина!'))


albumin(float(input("\033[0m{}".format('Альбумин (Albumin)[г/л]: '))))


def srp(a):
    """
        Функция srp принимает на вход один параметр,
        a - уровень С-реактивного белка крови в единицах измерения:
        [mg/L]
    """

    if 0 < a < 0.1:
        print("\033[33m{}".format('С-реактивный белок понижен!'))
    elif 0.1 <= a <= 5:
        print("\033[32m{}".format('С-реактивный белок в норме!'))
    elif 5 < a <= 100:
        print("\033[31m{}".format('С-реактивный белок повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня С-реактивного белка!'))


srp(float(input("\033[0m{}".format('С-реактивный белок (SRP)[mg/L]: '))))


def srp_sensitive(a):
    """
        Функция srp_sensitive принимает на вход один параметр,
        a - уровень СРБ высокочувствительного крови в единицах измерения:
        [mg/L]
    """

    if 0 < a < 0.05:
        print("\033[33m{}".format('СРБ высокочувствительный понижен!'))
    elif 0.05 <= a <= 1:
        print("\033[32m{}".format('СРБ высокочувствительный в норме!'))
    elif 1 < a <= 10:
        print("\033[31m{}".format('СРБ высокочувствительный повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня СРБ высокочувствительного!'))


srp_sensitive(float(input("\033[0m{}".format('СРБ высокочувствительный (CRP sensitive)[mg/L]: '))))


def alp(a):
    """
        Функция alp принимает на вход один параметр,
        a - уровень ГГТ крови в единицах измерения: [U/L]
    """

    if 0 < a < 40:
        print("\033[33m{}".format('Щелочная фосфатаза понижена!'))
    elif 40 <= a <= 130:
        print("\033[32m{}".format('Щелочная фосфатаза в норме!'))
    elif 130 < a <= 1000:
        print("\033[31m{}".format('Щелочная фосфатаза повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Щелочной фосфатазы!'))


alp(float(input("\033[0m{}".format('Щелочная фосфатаза (ALP)[U/L]: '))))


def alpha_amylase(a):
    """
        Функция alpha_amylase принимает на вход один параметр,
        a - уровень Альфа-Амилазы крови в единицах измерения: [U/L]
    """

    if 0 < a < 28:
        print("\033[33m{}".format('Альфа-Амилаза понижена!'))
    elif 28 <= a <= 100:
        print("\033[32m{}".format('Альфа-Амилаза в норме!'))
    elif 100 < a <= 1000:
        print("\033[31m{}".format('Альфа-Амилаза повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Альфа-Амилазы!'))


alpha_amylase(float(input("\033[0m{}".format('Альфа-Амилаза (Alpha-Amylase)[U/L]: '))))


def lipase(a):
    """
        Функция lipase принимает на вход один параметр,
        a - уровень липазы крови в единицах измерения: [U/L]
    """

    if 0 < a < 13:
        print("\033[33m{}".format('Липаза понижена!'))
    elif 13 <= a <= 60:
        print("\033[32m{}".format('Липаза в норме!'))
    elif 60 < a <= 2000:
        print("\033[31m{}".format('Липаза повышена!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Липазы!'))


lipase(float(input("\033[0m{}".format('Липаза (Lipase)[U/L]: '))))

""" БЛОК АНАЛИЗОВ КРОВИ: ЭЛЕКТРОЛИТЫ """
print("\033[01;4m{}".format(" ВВЕДИТЕ ЗНАЧЕНИЯ ЭЛЕКТРОЛИТОВ: "))


def sodium(a):
    """
        Функция sodium принимает на вход один параметр,
        a - уровень натрия крови в единицах измерения: [mmol/L]
    """

    if 50 < a < 136:
        print("\033[33m{}".format('Натрий понижен!'))
    elif 136 <= a <= 146:
        print("\033[32m{}".format('Натрий в норме!'))
    elif 146 < a <= 500:
        print("\033[31m{}".format('Натрий повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Натрия!'))


sodium(float(input("\033[0m{}".format('Натрий (Sodium)[mmol/L]: '))))


def potassium(a):
    """
        Функция potassiumm принимает на вход один параметр,
        a - уровень калия крови в единицах измерения: [mmol/L]
    """

    if 0 < a < 3.5:
        print("\033[33m{}".format('Калий понижен!'))
    elif 3.5 <= a <= 5.1:
        print("\033[32m{}".format('Калий в норме!'))
    elif 5.1 < a <= 30:
        print("\033[31m{}".format('Калий повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Калия!'))


potassium(float(input("\033[0m{}".format('Калий (Potassium)[mmol/L]: '))))


def chlorine(a):
    """
        Функция chlorine принимает на вход один параметр,
        a - уровень хлора крови в единицах измерения: [mmol/L]
    """

    if 50 < a < 101:
        print("\033[33m{}".format('Хлор понижен!'))
    elif 101 <= a <= 109:
        print("\033[32m{}".format('Хлор в норме!'))
    elif 109 < a <= 500:
        print("\033[31m{}".format('Хлор повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Хлора!'))


chlorine(float(input("\033[0m{}".format('Хлор (Chlorine)[mmol/L]: '))))

""" БЛОК АНАЛИЗОВ КРОВИ: ГОРМОНЫ """
print("\033[01;4m{}".format(" ВВЕДИТЕ ЗНАЧЕНИЕ ГОРМОНОВ: "))


def tsh(a):
    """
        Функция tsh принимает на вход один параметр,
        a - уровень ТТГ крови в единицах измерения: [μIU/mL]
    """

    if 0 < a < 0.27:
        print("\033[33m{}".format('ТТГ понижен!'))
    elif 0.27 <= a <= 4.2:
        print("\033[32m{}".format('ТТГ в норме!'))
    elif 4.2 < a <= 50:
        print("\033[31m{}".format('ТТГ повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ТТГ!'))


tsh(float(input("\033[0m{}".format('ТТГ (TSH)[μIU/mL]: '))))


def ft4(a):
    """
        Функция ft4 принимает на вход один параметр,
        a - уровень тироксина свободного (Т4 св.) крови
        в единицах измерения: [pmol/L]
    """

    if 0 < a < 12:
        print("\033[33m{}".format('Т4 свободный понижен!'))
    elif 12 <= a <= 22:
        print("\033[32m{}".format('Т4 свободный в норме!'))
    elif 22 < a <= 50:
        print("\033[31m{}".format('Т4 свободный повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Т4 свободного!'))


ft4(float(input("\033[0m{}".format('Т4 свободный (FT4)[pmol/L]: '))))


def lh(a):
    """
        Функция lh принимает на вход один параметр,
        a - уровень ЛГ крови в единицах измерения: [mIU/mL]
    """

    if 0 < a < 1.7:
        print("\033[33m{}".format('ЛГ понижен!'))
    elif 1.7 <= a <= 8.6:
        print("\033[32m{}".format('ЛГ в норме!'))
    elif 8.6 < a <= 50:
        print("\033[31m{}".format('ЛГ повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ЛГ!'))


lh(float(input("\033[0m{}".format('ЛГ (LH)[mIU/mL]: '))))


def fsh(a):
    """
        Функция fsh принимает на вход один параметр,
        a - уровень ФСГ крови в единицах измерения: [mIU/mL]
    """

    if 0 < a < 1.5:
        print("\033[33m{}".format('ФСГ понижен!'))
    elif 1.5 <= a <= 12.4:
        print("\033[32m{}".format('ФСГ в норме!'))
    elif 12.4 < a <= 50:
        print("\033[31m{}".format('ФСГ повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня ФСГ!'))


fsh(float(input("\033[0m{}".format('ФСГ (FSH)[mIU/mL]: '))))


def estradiol(a):
    """
        Функция estradiol принимает на вход один параметр,
        a - уровень Эстрадиола крови в единицах измерения: [pg/mL]
    """

    if 0 < a < 11.3:
        print("\033[33m{}".format('Эстрадиол понижен!'))
    elif 11.3 <= a <= 43.2:
        print("\033[32m{}".format('Эстрадиол в норме!'))
    elif 43.2 < a <= 3000:
        print("\033[31m{}".format('Эстрадиол повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Эстрадиола!'))


estradiol(float(input("\033[0m{}".format('Эстрадиол (Estradiol)[pg/mL]: '))))


def prolactin(a):
    """
        Функция prolactin принимает на вход один параметр,
        a - уровень Пролактина крови в единицах измерения: [μIU/mL]
    """

    if 0 < a < 86:
        print("\033[33m{}".format('Пролактин понижен!'))
    elif 86 <= a <= 324:
        print("\033[32m{}".format('Пролактин в норме!'))
    elif 324 < a <= 3000:
        print("\033[31m{}".format('Пролактин повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Пролактина!'))


prolactin(float(input("\033[0m{}".format('Пролактин (Prolactin)[μIU/mL]: '))))


def testosterone(a):
    """
        Функция testosterone принимает на вход один параметр,
        a - уровень Общего Тестостерона крови в единицах измерения: [ng/mL]
    """

    if 0 < a < 2.49:
        print("\033[33m{}".format('Общий Тестостерон понижен!'))
    elif 2.49 <= a <= 8.36:
        print("\033[32m{}".format('Общий Тестостерон в норме!'))
    elif 8.36 < a <= 300:
        print("\033[31m{}".format('Общий Тестостерон повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Общего Тестостерона!'))


testosterone(float(input("\033[0m{}".format('Общий Тестостерон (Testosterone)[ng/mL]: '))))


def free_testosterone(a):
    """
        Функция free_testosterone принимает на вход один параметр,
        a - уровень Свободного Тестостерона крови в единицах измерения: [pg/mL]
    """

    if 0 < a < 15:
        print("\033[33m{}".format('Свободный Тестостерон понижен!'))
    elif 15 <= a <= 50:
        print("\033[32m{}".format('Свободный Тестостерон в норме!'))
    elif 50 < a <= 300:
        print("\033[31m{}".format('Свободный Тестостерон повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Свободного Тестостерона!'))


free_testosterone(float(input("\033[0m{}".format('Свободный Тестостерон (Free Testosterone)[pg/mL]: '))))


def cortisol(a):
    """
        Функция cortisol принимает на вход один параметр,
        a - уровень Кортизола крови в единицах измерения: [nmol/L]
    """

    if 0 < a < 166:
        print("\033[33m{}".format('Кортизол понижен!'))
    elif 166 <= a <= 507:
        print("\033[32m{}".format('Кортизол в норме!'))
    elif 507 < a <= 5000:
        print("\033[31m{}".format('Кортизол повышен!'))
    else:
        print("\033[31m{}".format('Введены некорректные данные уровня Кортизола!'))


cortisol(float(input("\033[0m{}".format('Кортизол (Cortisol)[nmol/L]: '))))
